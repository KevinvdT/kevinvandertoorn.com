{
  "title": "Wartezeiten im Freizeitpark Efteling",
  "company": "Persönliches Projekt",
  "description": "The Eftel Times ist ein persönliches Projekt, das meine Liebe zu Efteling mit Webentwicklung verbindet und Live-Wartezeiten einfach zugänglich macht.",
  "modal": {
    "title": "The Eftel Times",
    "intro": [
      "Entwickelte <1>The Eftel Times</1>, eine <1>Übersicht der Wartezeiten</1> für Efteling. Dieses Projekt verbindet meine Liebe für den Park mit meinem technischen Wissen.",
      "Das Design ist inspiriert von typischen Efteling-Elementen, kombiniert mit einem spielerischen und zugänglichen Stil nach dem Vorbild von Duolingo, sodass klar ist, dass es sich um ein persönliches Projekt handelt und nicht um ein offizielles Produkt.",
      "Anstatt die interne API von Efteling direkt zu nutzen, verwendet das Backend die ThemeParks API, die ausdrücklich für Anwendungen von Drittanbietern gedacht ist. Ein <1>Django-Backend</1> transformiert und <1>cached die Ergebnisse</1>, um Überlastung zu vermeiden, und stellt sie einem <1>modernen React-Frontend</1> zur Verfügung."
    ],
    "technologies": {
      "title": "Technologien"
    },
    "features": {
      "title": "Wichtige Funktionen",
      "list": [
        "<1>Aktuelle Wartezeiten</1>: verantwortungsvoll abgerufen über die ThemeParks API, mit Caching zur Vermeidung unnötiger Last.",
        "<1>Responsives Design</1>: geeignet für Mobilgeräte und Desktop, mit einer modernen und zugleich stimmungsvollen Benutzeroberfläche.",
        "<1>Robustes Backend</1>: Django REST API mit Caching und Datentransformation für stabile Leistung."
      ]
    },
    "impact": {
      "title": "Auswirkung",
      "text": "The Eftel Times ist ein Projekt, in dem ich mein Wissen über das Entwerfen und Bereitstellen von <1>Full-Stack-Webanwendungen</1> eingesetzt habe. Gleichzeitig gab mir das Projekt die Möglichkeit, meine <1>Liebe zu Efteling</1> mit meiner technischen Erfahrung zu verbinden – darunter <1>API-Integration</1>, Caching und Backend-Architektur, zusammengeführt in einer <1>benutzerfreundlichen React-Oberfläche</1>. Ich habe das Projekt mit viel Freude umgesetzt."
    },
    "liveDemo": "Live-Demo",
    "viewCode": "Code auf GitHub"
  }
}